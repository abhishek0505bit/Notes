##
Download latest node js
to open the terminal of vs code  use ctrl + `

##
for installing react
we use npx create-react-app app_name

##
import React from 'react'; is used to use  jsx in the component
how react see the below statement:
    const app=()=>{
        return <h1> hello world </h1>
    }
react see this as:
    const app=()=>{
        return React.createElement("h1",{},"hello world");//element, props, value
    }
after react version 17.0, there is no need to write import React from 'react'
**we cannot give the same name to the two components

##
Rules to write JSX:
    It always returns a single element or a jsx fragment <>...</>
    use div or react fragment to wrap all your jsx code 
    always use className in place of class
    need to close all non closing tags in jsx
    use CamelCase for attributes 

##
What is nested components?
    component is basically a function which is exported  in other components so that it can be used there.
    Nested components means using the components inside another  component.
    to use components inside another component, you have to use the component name inside angular brackets </> in the other component which will make sure that it is  rendered.
    **for eg, other  components of your project are nested inside App component 

## PROJECT 1:(RESTAURANT APP)
    name of the component should always start with capital letter otherwise it will create problem in importing those components.
    for eg. Navbar, Restaurant.js, Division.js

    APPLYING CSS IN REACT:
        you can use css by importing external file of  css 
        or  you can use the inline css for styling your component 

    Dealing with images:
        create a images folder under public folder, then automatic all images can be retrieved under any component 
        Now, we will be getting the data from an api

        creating a menu api
            In API create array of objects.
            Menu will have objects, in which we will have key and value pair
            import menuApi inside restaurant.js component
            cut all the data from restaurant.js and paste in new component i.e, MenuCard.js
            ** hook should always be declared at the top in the function

    UnderStanding props in React JS:
        for repeating the component multiple times with single use  of code, we use props 
        props are always passed from the parent element to the child element
        passing the props:
            it is like attribute of html tag:
            value of prop is after "=" sign, this will be value of the prop
            eg,
            <MenuCard menuData   =   {menuData}>
                this is prop_name     this is value of that prop(js var)
            prop name can be anything 
            prop name is sent to the component
            how to render a component on loop:
                use map function 

    React Events:
        onClick:
            always use onClick as onClick=(()=>{function(parameter)})

    use spread operator to convert any iterable to an array:
        [...new Set([1,1,2,3])]
        o/p: [1, 2, 3]

    Destructuring elements:
        to avoid writing curEle.id, curEle.image again and again, use Destructuring of objects 
        i.e, const {id, image, name, category, price, description} = curEle
        now we can use id , image directly in place of curEle.id, curEle.image


##SUMMARY :
    In restaurant project, we learn about:
        components
        APIs
        map function
        filter function
        Destructuring of object
        useState hook 
        converting the object into array using spread operator(...)
        adding category by itself in the navbar when added in the api

    Todo list project:
        copy font awesome cdn 5.15.0 link and paste inside header element in public/index.html 
        go to font-awesome website and search for the icon you want(make your own project to do modifications with font awesome)
        whatever we are writing on the add items input box, it get added below:
            this we can do with the help of state, we will have the state
            one use State is used to change the value in the input box i.e, inputItem, and setInputItem
            everything is mentioned in the project with comments 

    weather app (real world api project):
        go to openWeather.org 
        register on this website
        click on your profile -> my api keys 
        create key: write key name and then generate (optional because you can use default key as well )
        copy the key generated by you or copy the default key, for eg, 2791282ce888c20fd44aadb33db07842
        go to pricing -> free api key
        click on api on navbar: -> current weather data -> click on api docs
        you will get the options that how you want to use this api:    
            by city name
            by zip code 
            we 'll choose by city name
            copy the api call of city name , paste in notepad 
            paste the api key in the place of that notepad in that city call address
            write city name = kanpur
            eg. https://api.openweathermap.org/data/2.5/weather?q=Pune&appid=2791282ce888c20fd44aadb33db07842
            paste this on browser to check whether you are getting the data or not
            if you are getting the data, that means you have used the right api otherwise there is some problem in the process
            












